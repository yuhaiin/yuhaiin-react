// @generated by protoc-gen-es v2.2.0 with parameter "target=ts,js_import_style=legacy_commonjs"
// @generated from file node/protocol/protocol.proto (package yuhaiin.protocol, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file node/protocol/protocol.proto.
 */
export const file_node_protocol_protocol: GenFile = /*@__PURE__*/
  fileDesc("Chxub2RlL3Byb3RvY29sL3Byb3RvY29sLnByb3RvEhB5dWhhaWluLnByb3RvY29sIvoHCghwcm90b2NvbBI0CgtzaGFkb3dzb2NrcxgBIAEoCzIdLnl1aGFpaW4ucHJvdG9jb2wuc2hhZG93c29ja3NIABI2CgxzaGFkb3dzb2Nrc3IYAiABKAsyHi55dWhhaWluLnByb3RvY29sLnNoYWRvd3NvY2tzckgAEigKBXZtZXNzGAMgASgLMhcueXVoYWlpbi5wcm90b2NvbC52bWVzc0gAEjAKCXdlYnNvY2tldBgEIAEoCzIbLnl1aGFpaW4ucHJvdG9jb2wud2Vic29ja2V0SAASJgoEcXVpYxgFIAEoCzIWLnl1aGFpaW4ucHJvdG9jb2wucXVpY0gAEjsKCW9iZnNfaHR0cBgGIAEoCzIbLnl1aGFpaW4ucHJvdG9jb2wub2Jmc19odHRwSABSCW9iZnNfaHR0cBIqCgZ0cm9qYW4YByABKAsyGC55dWhhaWluLnByb3RvY29sLnRyb2phbkgAEioKBnNpbXBsZRgIIAEoCzIYLnl1aGFpaW4ucHJvdG9jb2wuc2ltcGxlSAASJgoEbm9uZRgJIAEoCzIWLnl1aGFpaW4ucHJvdG9jb2wubm9uZUgAEioKBnNvY2tzNRgKIAEoCzIYLnl1aGFpaW4ucHJvdG9jb2wuc29ja3M1SAASJgoEaHR0cBgLIAEoCzIWLnl1aGFpaW4ucHJvdG9jb2wuaHR0cEgAEioKBmRpcmVjdBgMIAEoCzIYLnl1aGFpaW4ucHJvdG9jb2wuZGlyZWN0SAASKgoGcmVqZWN0GA0gASgLMhgueXVoYWlpbi5wcm90b2NvbC5yZWplY3RIABIwCgl5dXViaW5zeWEYDiABKAsyGy55dWhhaWluLnByb3RvY29sLnl1dWJpbnN5YUgAEiYKBGdycGMYDyABKAsyFi55dWhhaWluLnByb3RvY29sLmdycGNIABIoCgVodHRwMhgQIAEoCzIXLnl1aGFpaW4ucHJvdG9jb2wuaHR0cDJIABIsCgdyZWFsaXR5GBEgASgLMhkueXVoYWlpbi5wcm90b2NvbC5yZWFsaXR5SAASKwoDdGxzGBIgASgLMhwueXVoYWlpbi5wcm90b2NvbC50bHNfY29uZmlnSAASMAoJd2lyZWd1YXJkGBMgASgLMhsueXVoYWlpbi5wcm90b2NvbC53aXJlZ3VhcmRIABIkCgNtdXgYFCABKAsyFS55dWhhaWluLnByb3RvY29sLm11eEgAEiYKBGRyb3AYFSABKAsyFi55dWhhaWluLnByb3RvY29sLmRyb3BIABIoCgV2bGVzcxgWIAEoCzIXLnl1aGFpaW4ucHJvdG9jb2wudmxlc3NIAEIKCghwcm90b2NvbCJgCgZzb2NrczUSEAoIaG9zdG5hbWUYAyABKAkSDAoEdXNlchgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRIkCg1vdmVycmlkZV9wb3J0GAQgASgNUg1vdmVycmlkZV9wb3J0IiYKBGh0dHASDAoEdXNlchgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSIvCgtzaGFkb3dzb2NrcxIOCgZtZXRob2QYASABKAkSEAoIcGFzc3dvcmQYAiABKAkilQEKDHNoYWRvd3NvY2tzchIOCgZzZXJ2ZXIYASABKAkSDAoEcG9ydBgCIAEoCRIOCgZtZXRob2QYAyABKAkSEAoIcGFzc3dvcmQYBCABKAkSDAoEb2JmcxgFIAEoCRIRCglvYmZzcGFyYW0YBiABKAkSEAoIcHJvdG9jb2wYByABKAkSEgoKcHJvdG9wYXJhbRgIIAEoCSIcCgVodHRwMhITCgtjb25jdXJyZW5jeRgBIAEoBSJCCgV2bWVzcxIQCgR1dWlkGAEgASgJUgJpZBIVCghhbHRlcl9pZBgCIAEoCVIDYWlkEhAKCHNlY3VyaXR5GAMgASgJIhUKBXZsZXNzEgwKBHV1aWQYASABKAkiKAoGdHJvamFuEhAKCHBhc3N3b3JkGAEgASgJEgwKBHBlZXIYAiABKAkinAEKCXl1dWJpbnN5YRIQCghwYXNzd29yZBgBIAEoCRIgCgt0Y3BfZW5jcnlwdBgEIAEoCFILdGNwX2VuY3J5cHQSIAoLdWRwX2VuY3J5cHQYBSABKAhSC3VkcF9lbmNyeXB0EigKD3VkcF9vdmVyX3N0cmVhbRgDIAEoCFIPdWRwX292ZXJfc3RyZWFtSgQIAhADUgllbmNyeXB0ZWQiOgoJd2Vic29ja2V0EgwKBGhvc3QYASABKAkSDAoEcGF0aBgCIAEoCUoECAQQBVILdGxzX2VuYWJsZWQiMQoEZ3JwYxIpCgN0bHMYASABKAsyHC55dWhhaWluLnByb3RvY29sLnRsc19jb25maWciPwoEcXVpYxIMCgRob3N0GAIgASgJEikKA3RscxgBIAEoCzIcLnl1aGFpaW4ucHJvdG9jb2wudGxzX2NvbmZpZyJ2CgdyZWFsaXR5EiAKC3NlcnZlcl9uYW1lGAEgASgJUgtzZXJ2ZXJfbmFtZRIeCgpwdWJsaWNfa2V5GAIgASgJUgpwdWJsaWNfa2V5EhoKCHNob3J0X2lkGAMgASgJUghzaG9ydF9pZBINCgVkZWJ1ZxgEIAEoCCInCglvYmZzX2h0dHASDAoEaG9zdBgBIAEoCRIMCgRwb3J0GAIgASgJIgYKBG5vbmUixgEKBnNpbXBsZRIMCgRob3N0GAEgASgJEgwKBHBvcnQYAiABKAUSPgoOYWx0ZXJuYXRlX2hvc3QYBSADKAsyFi55dWhhaWluLnByb3RvY29sLmhvc3RSDmFsdGVybmF0ZV9ob3N0EiwKEW5ldHdvcmtfaW50ZXJmYWNlGAcgASgJUhFuZXR3b3JrX2ludGVyZmFjZUoECAQQBUoECAYQB0oECAMQBFIDdGxzUgd0aW1lb3V0UhJwYWNrZXRfY29ubl9kaXJlY3QizwEKCnRsc19jb25maWcSDgoGZW5hYmxlGAEgASgIEiEKDHNlcnZlcl9uYW1lcxgGIAMoCVILc2VydmVybmFtZXMSGAoHY2FfY2VydBgDIAMoDFIHY2FfY2VydBIyChRpbnNlY3VyZV9za2lwX3ZlcmlmeRgEIAEoCFIUaW5zZWN1cmVfc2tpcF92ZXJpZnkSIAoLbmV4dF9wcm90b3MYBSADKAlSC25leHRfcHJvdG9zEh4KCmVjaF9jb25maWcYByABKAxSCmVjaF9jb25maWciFwoGZGlyZWN0SgQIARACUgd0aW1lb3V0IggKBnJlamVjdCIGCgRkcm9wIiIKBGhvc3QSDAoEaG9zdBgBIAEoCRIMCgRwb3J0GAIgASgFIn4KFXdpcmVndWFyZF9wZWVyX2NvbmZpZxISCgpwdWJsaWNfa2V5GAEgASgJEhYKDnByZV9zaGFyZWRfa2V5GAIgASgJEhAKCGVuZHBvaW50GAMgASgJEhIKCmtlZXBfYWxpdmUYBCABKAUSEwoLYWxsb3dlZF9pcHMYBSADKAkingEKCXdpcmVndWFyZBISCgpzZWNyZXRfa2V5GAEgASgJEhAKCGVuZHBvaW50GAIgAygJEjYKBXBlZXJzGAMgAygLMicueXVoYWlpbi5wcm90b2NvbC53aXJlZ3VhcmRfcGVlcl9jb25maWcSCwoDbXR1GAQgASgFEhAKCHJlc2VydmVkGAYgASgMEhQKDGlkbGVfdGltZW91dBgHIAEoBSIaCgNtdXgSEwoLY29uY3VycmVuY3kYASABKAVCN1o1Z2l0aHViLmNvbS9Bc3V0b3J1ZmEveXVoYWlpbi9wa2cvcHJvdG9zL25vZGUvcHJvdG9jb2xiBnByb3RvMw");

/**
 * @generated from message yuhaiin.protocol.protocol
 */
export type protocol = Message<"yuhaiin.protocol.protocol"> & {
  /**
   * @generated from oneof yuhaiin.protocol.protocol.protocol
   */
  protocol: {
    /**
     * @generated from field: yuhaiin.protocol.shadowsocks shadowsocks = 1;
     */
    value: shadowsocks;
    case: "shadowsocks";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.shadowsocksr shadowsocksr = 2;
     */
    value: shadowsocksr;
    case: "shadowsocksr";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.vmess vmess = 3;
     */
    value: vmess;
    case: "vmess";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.websocket websocket = 4;
     */
    value: websocket;
    case: "websocket";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.quic quic = 5;
     */
    value: quic;
    case: "quic";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.obfs_http obfs_http = 6 [json_name = "obfs_http"];
     */
    value: obfs_http;
    case: "obfsHttp";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.trojan trojan = 7;
     */
    value: trojan;
    case: "trojan";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.simple simple = 8;
     */
    value: simple;
    case: "simple";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.none none = 9;
     */
    value: none;
    case: "none";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.socks5 socks5 = 10;
     */
    value: socks5;
    case: "socks5";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.http http = 11;
     */
    value: http;
    case: "http";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.direct direct = 12;
     */
    value: direct;
    case: "direct";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.reject reject = 13;
     */
    value: reject;
    case: "reject";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.yuubinsya yuubinsya = 14;
     */
    value: yuubinsya;
    case: "yuubinsya";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.grpc grpc = 15;
     */
    value: grpc;
    case: "grpc";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.http2 http2 = 16;
     */
    value: http2;
    case: "http2";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.reality reality = 17;
     */
    value: reality;
    case: "reality";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.tls_config tls = 18;
     */
    value: tls_config;
    case: "tls";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.wireguard wireguard = 19;
     */
    value: wireguard;
    case: "wireguard";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.mux mux = 20;
     */
    value: mux;
    case: "mux";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.drop drop = 21;
     */
    value: drop;
    case: "drop";
  } | {
    /**
     * @generated from field: yuhaiin.protocol.vless vless = 22;
     */
    value: vless;
    case: "vless";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message yuhaiin.protocol.protocol.
 * Use `create(protocolSchema)` to create a new message.
 */
export const protocolSchema: GenMessage<protocol> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 0);

/**
 * @generated from message yuhaiin.protocol.socks5
 */
export type socks5 = Message<"yuhaiin.protocol.socks5"> & {
  /**
   * eg: 127.0.0.1
   *
   * @generated from field: string hostname = 3;
   */
  hostname: string;

  /**
   * @generated from field: string user = 1;
   */
  user: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * TODO: add override hostname options
   *
   * @generated from field: uint32 override_port = 4 [json_name = "override_port"];
   */
  overridePort: number;
};

/**
 * Describes the message yuhaiin.protocol.socks5.
 * Use `create(socks5Schema)` to create a new message.
 */
export const socks5Schema: GenMessage<socks5> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 1);

/**
 * @generated from message yuhaiin.protocol.http
 */
export type http = Message<"yuhaiin.protocol.http"> & {
  /**
   * @generated from field: string user = 1;
   */
  user: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message yuhaiin.protocol.http.
 * Use `create(httpSchema)` to create a new message.
 */
export const httpSchema: GenMessage<http> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 2);

/**
 * @generated from message yuhaiin.protocol.shadowsocks
 */
export type shadowsocks = Message<"yuhaiin.protocol.shadowsocks"> & {
  /**
   * @generated from field: string method = 1;
   */
  method: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message yuhaiin.protocol.shadowsocks.
 * Use `create(shadowsocksSchema)` to create a new message.
 */
export const shadowsocksSchema: GenMessage<shadowsocks> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 3);

/**
 * @generated from message yuhaiin.protocol.shadowsocksr
 */
export type shadowsocksr = Message<"yuhaiin.protocol.shadowsocksr"> & {
  /**
   * @generated from field: string server = 1;
   */
  server: string;

  /**
   * @generated from field: string port = 2;
   */
  port: string;

  /**
   * @generated from field: string method = 3;
   */
  method: string;

  /**
   * @generated from field: string password = 4;
   */
  password: string;

  /**
   * @generated from field: string obfs = 5;
   */
  obfs: string;

  /**
   * @generated from field: string obfsparam = 6;
   */
  obfsparam: string;

  /**
   * @generated from field: string protocol = 7;
   */
  protocol: string;

  /**
   * @generated from field: string protoparam = 8;
   */
  protoparam: string;
};

/**
 * Describes the message yuhaiin.protocol.shadowsocksr.
 * Use `create(shadowsocksrSchema)` to create a new message.
 */
export const shadowsocksrSchema: GenMessage<shadowsocksr> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 4);

/**
 * @generated from message yuhaiin.protocol.http2
 */
export type http2 = Message<"yuhaiin.protocol.http2"> & {
  /**
   * @generated from field: int32 concurrency = 1;
   */
  concurrency: number;
};

/**
 * Describes the message yuhaiin.protocol.http2.
 * Use `create(http2Schema)` to create a new message.
 */
export const http2Schema: GenMessage<http2> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 5);

/**
 * @generated from message yuhaiin.protocol.vmess
 */
export type vmess = Message<"yuhaiin.protocol.vmess"> & {
  /**
   * uuid
   *
   * @generated from field: string uuid = 1 [json_name = "id"];
   */
  uuid: string;

  /**
   * alter id
   *
   * @generated from field: string alter_id = 2 [json_name = "aid"];
   */
  alterId: string;

  /**
   * @generated from field: string security = 3;
   */
  security: string;
};

/**
 * Describes the message yuhaiin.protocol.vmess.
 * Use `create(vmessSchema)` to create a new message.
 */
export const vmessSchema: GenMessage<vmess> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 6);

/**
 * @generated from message yuhaiin.protocol.vless
 */
export type vless = Message<"yuhaiin.protocol.vless"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message yuhaiin.protocol.vless.
 * Use `create(vlessSchema)` to create a new message.
 */
export const vlessSchema: GenMessage<vless> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 7);

/**
 * @generated from message yuhaiin.protocol.trojan
 */
export type trojan = Message<"yuhaiin.protocol.trojan"> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;

  /**
   * @generated from field: string peer = 2;
   */
  peer: string;
};

/**
 * Describes the message yuhaiin.protocol.trojan.
 * Use `create(trojanSchema)` to create a new message.
 */
export const trojanSchema: GenMessage<trojan> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 8);

/**
 * @generated from message yuhaiin.protocol.yuubinsya
 */
export type yuubinsya = Message<"yuhaiin.protocol.yuubinsya"> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;

  /**
   * @generated from field: bool tcp_encrypt = 4 [json_name = "tcp_encrypt"];
   */
  tcpEncrypt: boolean;

  /**
   * @generated from field: bool udp_encrypt = 5 [json_name = "udp_encrypt"];
   */
  udpEncrypt: boolean;

  /**
   * @generated from field: bool udp_over_stream = 3 [json_name = "udp_over_stream"];
   */
  udpOverStream: boolean;
};

/**
 * Describes the message yuhaiin.protocol.yuubinsya.
 * Use `create(yuubinsyaSchema)` to create a new message.
 */
export const yuubinsyaSchema: GenMessage<yuubinsya> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 9);

/**
 * @generated from message yuhaiin.protocol.websocket
 */
export type websocket = Message<"yuhaiin.protocol.websocket"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: string path = 2;
   */
  path: string;
};

/**
 * Describes the message yuhaiin.protocol.websocket.
 * Use `create(websocketSchema)` to create a new message.
 */
export const websocketSchema: GenMessage<websocket> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 10);

/**
 * @generated from message yuhaiin.protocol.grpc
 */
export type grpc = Message<"yuhaiin.protocol.grpc"> & {
  /**
   * @generated from field: yuhaiin.protocol.tls_config tls = 1;
   */
  tls?: tls_config;
};

/**
 * Describes the message yuhaiin.protocol.grpc.
 * Use `create(grpcSchema)` to create a new message.
 */
export const grpcSchema: GenMessage<grpc> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 11);

/**
 * @generated from message yuhaiin.protocol.quic
 */
export type quic = Message<"yuhaiin.protocol.quic"> & {
  /**
   * @generated from field: string host = 2;
   */
  host: string;

  /**
   * @generated from field: yuhaiin.protocol.tls_config tls = 1;
   */
  tls?: tls_config;
};

/**
 * Describes the message yuhaiin.protocol.quic.
 * Use `create(quicSchema)` to create a new message.
 */
export const quicSchema: GenMessage<quic> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 12);

/**
 * @generated from message yuhaiin.protocol.reality
 */
export type reality = Message<"yuhaiin.protocol.reality"> & {
  /**
   * @generated from field: string server_name = 1 [json_name = "server_name"];
   */
  serverName: string;

  /**
   * @generated from field: string public_key = 2 [json_name = "public_key"];
   */
  publicKey: string;

  /**
   * @generated from field: string short_id = 3 [json_name = "short_id"];
   */
  shortId: string;

  /**
   * @generated from field: bool debug = 4;
   */
  debug: boolean;
};

/**
 * Describes the message yuhaiin.protocol.reality.
 * Use `create(realitySchema)` to create a new message.
 */
export const realitySchema: GenMessage<reality> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 13);

/**
 * @generated from message yuhaiin.protocol.obfs_http
 */
export type obfs_http = Message<"yuhaiin.protocol.obfs_http"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: string port = 2;
   */
  port: string;
};

/**
 * Describes the message yuhaiin.protocol.obfs_http.
 * Use `create(obfs_httpSchema)` to create a new message.
 */
export const obfs_httpSchema: GenMessage<obfs_http> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 14);

/**
 * @generated from message yuhaiin.protocol.none
 */
export type none = Message<"yuhaiin.protocol.none"> & {
};

/**
 * Describes the message yuhaiin.protocol.none.
 * Use `create(noneSchema)` to create a new message.
 */
export const noneSchema: GenMessage<none> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 15);

/**
 * @generated from message yuhaiin.protocol.simple
 */
export type simple = Message<"yuhaiin.protocol.simple"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: int32 port = 2;
   */
  port: number;

  /**
   * @generated from field: repeated yuhaiin.protocol.host alternate_host = 5 [json_name = "alternate_host"];
   */
  alternateHost: host[];

  /**
   * @generated from field: string network_interface = 7 [json_name = "network_interface"];
   */
  networkInterface: string;
};

/**
 * Describes the message yuhaiin.protocol.simple.
 * Use `create(simpleSchema)` to create a new message.
 */
export const simpleSchema: GenMessage<simple> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 16);

/**
 * @generated from message yuhaiin.protocol.tls_config
 */
export type tls_config = Message<"yuhaiin.protocol.tls_config"> & {
  /**
   * @generated from field: bool enable = 1;
   */
  enable: boolean;

  /**
   * @generated from field: repeated string server_names = 6 [json_name = "servernames"];
   */
  serverNames: string[];

  /**
   * @generated from field: repeated bytes ca_cert = 3 [json_name = "ca_cert"];
   */
  caCert: Uint8Array[];

  /**
   * @generated from field: bool insecure_skip_verify = 4 [json_name = "insecure_skip_verify"];
   */
  insecureSkipVerify: boolean;

  /**
   * next_protos ALPN Next Protocol
   * eg: h2, http/1.1
   *
   * @generated from field: repeated string next_protos = 5 [json_name = "next_protos"];
   */
  nextProtos: string[];

  /**
   * @generated from field: bytes ech_config = 7 [json_name = "ech_config"];
   */
  echConfig: Uint8Array;
};

/**
 * Describes the message yuhaiin.protocol.tls_config.
 * Use `create(tls_configSchema)` to create a new message.
 */
export const tls_configSchema: GenMessage<tls_config> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 17);

/**
 * @generated from message yuhaiin.protocol.direct
 */
export type direct = Message<"yuhaiin.protocol.direct"> & {
};

/**
 * Describes the message yuhaiin.protocol.direct.
 * Use `create(directSchema)` to create a new message.
 */
export const directSchema: GenMessage<direct> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 18);

/**
 * @generated from message yuhaiin.protocol.reject
 */
export type reject = Message<"yuhaiin.protocol.reject"> & {
};

/**
 * Describes the message yuhaiin.protocol.reject.
 * Use `create(rejectSchema)` to create a new message.
 */
export const rejectSchema: GenMessage<reject> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 19);

/**
 * @generated from message yuhaiin.protocol.drop
 */
export type drop = Message<"yuhaiin.protocol.drop"> & {
};

/**
 * Describes the message yuhaiin.protocol.drop.
 * Use `create(dropSchema)` to create a new message.
 */
export const dropSchema: GenMessage<drop> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 20);

/**
 * @generated from message yuhaiin.protocol.host
 */
export type host = Message<"yuhaiin.protocol.host"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: int32 port = 2;
   */
  port: number;
};

/**
 * Describes the message yuhaiin.protocol.host.
 * Use `create(hostSchema)` to create a new message.
 */
export const hostSchema: GenMessage<host> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 21);

/**
 * @generated from message yuhaiin.protocol.wireguard_peer_config
 */
export type wireguard_peer_config = Message<"yuhaiin.protocol.wireguard_peer_config"> & {
  /**
   * @generated from field: string public_key = 1;
   */
  publicKey: string;

  /**
   * @generated from field: string pre_shared_key = 2;
   */
  preSharedKey: string;

  /**
   * @generated from field: string endpoint = 3;
   */
  endpoint: string;

  /**
   * @generated from field: int32 keep_alive = 4;
   */
  keepAlive: number;

  /**
   * @generated from field: repeated string allowed_ips = 5;
   */
  allowedIps: string[];
};

/**
 * Describes the message yuhaiin.protocol.wireguard_peer_config.
 * Use `create(wireguard_peer_configSchema)` to create a new message.
 */
export const wireguard_peer_configSchema: GenMessage<wireguard_peer_config> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 22);

/**
 * @generated from message yuhaiin.protocol.wireguard
 */
export type wireguard = Message<"yuhaiin.protocol.wireguard"> & {
  /**
   * @generated from field: string secret_key = 1;
   */
  secretKey: string;

  /**
   * @generated from field: repeated string endpoint = 2;
   */
  endpoint: string[];

  /**
   * @generated from field: repeated yuhaiin.protocol.wireguard_peer_config peers = 3;
   */
  peers: wireguard_peer_config[];

  /**
   * @generated from field: int32 mtu = 4;
   */
  mtu: number;

  /**
   * @generated from field: bytes reserved = 6;
   */
  reserved: Uint8Array;

  /**
   * @generated from field: int32 idle_timeout = 7;
   */
  idleTimeout: number;
};

/**
 * Describes the message yuhaiin.protocol.wireguard.
 * Use `create(wireguardSchema)` to create a new message.
 */
export const wireguardSchema: GenMessage<wireguard> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 23);

/**
 * @generated from message yuhaiin.protocol.mux
 */
export type mux = Message<"yuhaiin.protocol.mux"> & {
  /**
   * @generated from field: int32 concurrency = 1;
   */
  concurrency: number;
};

/**
 * Describes the message yuhaiin.protocol.mux.
 * Use `create(muxSchema)` to create a new message.
 */
export const muxSchema: GenMessage<mux> = /*@__PURE__*/
  messageDesc(file_node_protocol_protocol, 24);

