// @generated by protoc-gen-es v1.9.0 with parameter "target=ts,js_import_style=legacy_commonjs"
// @generated from file node/grpc/node.proto (package yuhaiin.protos.node.service, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { point } from "../point/point_pb.js";
import { link } from "../subscribe/subscribe_pb.js";
import { tag_type } from "../tag/tag_pb.js";

/**
 * @generated from message yuhaiin.protos.node.service.now_resp
 */
export class now_resp extends Message<now_resp> {
  /**
   * @generated from field: yuhaiin.point.point tcp = 1;
   */
  tcp?: point;

  /**
   * @generated from field: yuhaiin.point.point udp = 2;
   */
  udp?: point;

  constructor(data?: PartialMessage<now_resp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.node.service.now_resp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tcp", kind: "message", T: point },
    { no: 2, name: "udp", kind: "message", T: point },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): now_resp {
    return new now_resp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): now_resp {
    return new now_resp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): now_resp {
    return new now_resp().fromJsonString(jsonString, options);
  }

  static equals(a: now_resp | PlainMessage<now_resp> | undefined, b: now_resp | PlainMessage<now_resp> | undefined): boolean {
    return proto3.util.equals(now_resp, a, b);
  }
}

/**
 * @generated from message yuhaiin.protos.node.service.use_req
 */
export class use_req extends Message<use_req> {
  /**
   * @generated from field: bool tcp = 1;
   */
  tcp = false;

  /**
   * @generated from field: bool udp = 2;
   */
  udp = false;

  /**
   * @generated from field: string hash = 3;
   */
  hash = "";

  constructor(data?: PartialMessage<use_req>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.node.service.use_req";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tcp", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "udp", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): use_req {
    return new use_req().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): use_req {
    return new use_req().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): use_req {
    return new use_req().fromJsonString(jsonString, options);
  }

  static equals(a: use_req | PlainMessage<use_req> | undefined, b: use_req | PlainMessage<use_req> | undefined): boolean {
    return proto3.util.equals(use_req, a, b);
  }
}

/**
 * @generated from message yuhaiin.protos.node.service.save_link_req
 */
export class save_link_req extends Message<save_link_req> {
  /**
   * @generated from field: repeated yuhaiin.subscribe.link links = 1;
   */
  links: link[] = [];

  constructor(data?: PartialMessage<save_link_req>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.node.service.save_link_req";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "links", kind: "message", T: link, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): save_link_req {
    return new save_link_req().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): save_link_req {
    return new save_link_req().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): save_link_req {
    return new save_link_req().fromJsonString(jsonString, options);
  }

  static equals(a: save_link_req | PlainMessage<save_link_req> | undefined, b: save_link_req | PlainMessage<save_link_req> | undefined): boolean {
    return proto3.util.equals(save_link_req, a, b);
  }
}

/**
 * @generated from message yuhaiin.protos.node.service.link_req
 */
export class link_req extends Message<link_req> {
  /**
   * @generated from field: repeated string names = 1;
   */
  names: string[] = [];

  constructor(data?: PartialMessage<link_req>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.node.service.link_req";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): link_req {
    return new link_req().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): link_req {
    return new link_req().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): link_req {
    return new link_req().fromJsonString(jsonString, options);
  }

  static equals(a: link_req | PlainMessage<link_req> | undefined, b: link_req | PlainMessage<link_req> | undefined): boolean {
    return proto3.util.equals(link_req, a, b);
  }
}

/**
 * @generated from message yuhaiin.protos.node.service.get_links_resp
 */
export class get_links_resp extends Message<get_links_resp> {
  /**
   * @generated from field: map<string, yuhaiin.subscribe.link> links = 1;
   */
  links: { [key: string]: link } = {};

  constructor(data?: PartialMessage<get_links_resp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.node.service.get_links_resp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "links", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: link} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): get_links_resp {
    return new get_links_resp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): get_links_resp {
    return new get_links_resp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): get_links_resp {
    return new get_links_resp().fromJsonString(jsonString, options);
  }

  static equals(a: get_links_resp | PlainMessage<get_links_resp> | undefined, b: get_links_resp | PlainMessage<get_links_resp> | undefined): boolean {
    return proto3.util.equals(get_links_resp, a, b);
  }
}

/**
 * @generated from message yuhaiin.protos.node.service.save_tag_req
 */
export class save_tag_req extends Message<save_tag_req> {
  /**
   * @generated from field: string tag = 1;
   */
  tag = "";

  /**
   * @generated from field: yuhaiin.tag.tag_type type = 3;
   */
  type = tag_type.node;

  /**
   * @generated from field: string hash = 2;
   */
  hash = "";

  constructor(data?: PartialMessage<save_tag_req>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.node.service.save_tag_req";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "type", kind: "enum", T: proto3.getEnumType(tag_type) },
    { no: 2, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): save_tag_req {
    return new save_tag_req().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): save_tag_req {
    return new save_tag_req().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): save_tag_req {
    return new save_tag_req().fromJsonString(jsonString, options);
  }

  static equals(a: save_tag_req | PlainMessage<save_tag_req> | undefined, b: save_tag_req | PlainMessage<save_tag_req> | undefined): boolean {
    return proto3.util.equals(save_tag_req, a, b);
  }
}

