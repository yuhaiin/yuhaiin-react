// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file tools/tools.proto (package yuhaiin.tools, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message yuhaiin.tools.Interfaces
 */
export class Interfaces extends Message<Interfaces> {
  /**
   * @generated from field: repeated yuhaiin.tools.Interface interfaces = 1;
   */
  interfaces: Interface[] = [];

  constructor(data?: PartialMessage<Interfaces>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.tools.Interfaces";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "interfaces", kind: "message", T: Interface, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Interfaces {
    return new Interfaces().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Interfaces {
    return new Interfaces().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Interfaces {
    return new Interfaces().fromJsonString(jsonString, options);
  }

  static equals(a: Interfaces | PlainMessage<Interfaces> | undefined, b: Interfaces | PlainMessage<Interfaces> | undefined): boolean {
    return proto3.util.equals(Interfaces, a, b);
  }
}

/**
 * @generated from message yuhaiin.tools.Interface
 */
export class Interface extends Message<Interface> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: repeated string addresses = 2;
   */
  addresses: string[] = [];

  constructor(data?: PartialMessage<Interface>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.tools.Interface";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "addresses", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Interface {
    return new Interface().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Interface {
    return new Interface().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Interface {
    return new Interface().fromJsonString(jsonString, options);
  }

  static equals(a: Interface | PlainMessage<Interface> | undefined, b: Interface | PlainMessage<Interface> | undefined): boolean {
    return proto3.util.equals(Interface, a, b);
  }
}

