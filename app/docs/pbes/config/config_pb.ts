// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file config/config.proto (package yuhaiin.config, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { bypass_config } from "./bypass/bypass_pb.js";
import { dns_config } from "./dns/dns_pb.js";
import { inbound_config } from "./listener/listener_pb.js";
import { logcat } from "./log/log_pb.js";

/**
 * @generated from message yuhaiin.config.setting
 */
export class setting extends Message<setting> {
  /**
   * @generated from field: bool ipv6 = 7;
   */
  ipv6 = false;

  /**
   * net_interface, eg: eth0
   *
   * @generated from field: string net_interface = 6 [json_name = "net_interface"];
   */
  netInterface = "";

  /**
   * @generated from field: yuhaiin.config.system_proxy system_proxy = 1 [json_name = "system_proxy"];
   */
  systemProxy?: system_proxy;

  /**
   * @generated from field: yuhaiin.bypass.bypass_config bypass = 2;
   */
  bypass?: bypass_config;

  /**
   * @generated from field: yuhaiin.dns.dns_config dns = 4;
   */
  dns?: dns_config;

  /**
   * @generated from field: yuhaiin.listener.inbound_config server = 5;
   */
  server?: inbound_config;

  /**
   * @generated from field: yuhaiin.log.logcat logcat = 8;
   */
  logcat?: logcat;

  constructor(data?: PartialMessage<setting>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.config.setting";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 7, name: "ipv6", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "net_interface", jsonName: "net_interface", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 1, name: "system_proxy", jsonName: "system_proxy", kind: "message", T: system_proxy },
    { no: 2, name: "bypass", kind: "message", T: bypass_config },
    { no: 4, name: "dns", kind: "message", T: dns_config },
    { no: 5, name: "server", kind: "message", T: inbound_config },
    { no: 8, name: "logcat", kind: "message", T: logcat },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): setting {
    return new setting().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): setting {
    return new setting().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): setting {
    return new setting().fromJsonString(jsonString, options);
  }

  static equals(a: setting | PlainMessage<setting> | undefined, b: setting | PlainMessage<setting> | undefined): boolean {
    return proto3.util.equals(setting, a, b);
  }
}

/**
 * @generated from message yuhaiin.config.system_proxy
 */
export class system_proxy extends Message<system_proxy> {
  /**
   * @generated from field: bool http = 2;
   */
  http = false;

  /**
   * @generated from field: bool socks5 = 3;
   */
  socks5 = false;

  constructor(data?: PartialMessage<system_proxy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.config.system_proxy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "http", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "socks5", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): system_proxy {
    return new system_proxy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): system_proxy {
    return new system_proxy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): system_proxy {
    return new system_proxy().fromJsonString(jsonString, options);
  }

  static equals(a: system_proxy | PlainMessage<system_proxy> | undefined, b: system_proxy | PlainMessage<system_proxy> | undefined): boolean {
    return proto3.util.equals(system_proxy, a, b);
  }
}

/**
 * @generated from message yuhaiin.config.info
 */
export class info extends Message<info> {
  /**
   * @generated from field: string version = 1;
   */
  version = "";

  /**
   * @generated from field: string commit = 2;
   */
  commit = "";

  /**
   * @generated from field: string build_time = 3 [json_name = "build_time"];
   */
  buildTime = "";

  /**
   * @generated from field: string go_version = 4 [json_name = "go_version"];
   */
  goVersion = "";

  /**
   * @generated from field: string arch = 5;
   */
  arch = "";

  /**
   * @generated from field: string platform = 6;
   */
  platform = "";

  /**
   * @generated from field: string os = 7;
   */
  os = "";

  /**
   * @generated from field: string compiler = 8;
   */
  compiler = "";

  /**
   * @generated from field: repeated string build = 9;
   */
  build: string[] = [];

  constructor(data?: PartialMessage<info>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.config.info";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "commit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "build_time", jsonName: "build_time", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "go_version", jsonName: "go_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "arch", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "platform", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "os", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "compiler", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "build", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): info {
    return new info().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): info {
    return new info().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): info {
    return new info().fromJsonString(jsonString, options);
  }

  static equals(a: info | PlainMessage<info> | undefined, b: info | PlainMessage<info> | undefined): boolean {
    return proto3.util.equals(info, a, b);
  }
}

