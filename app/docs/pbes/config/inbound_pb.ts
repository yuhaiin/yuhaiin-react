// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file config/inbound.proto (package yuhaiin.inbound, edition 2023)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_go_features } from "@bufbuild/protobuf/wkt";
import type { AeadCryptoMethod, tls_config, tls_server_config } from "../node/protocol_pb";
import { file_node_protocol } from "../node/protocol_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file config/inbound.proto.
 */
export const file_config_inbound: GenFile = /*@__PURE__*/
  fileDesc("ChRjb25maWcvaW5ib3VuZC5wcm90bxIPeXVoYWlpbi5pbmJvdW5kIqQCCg5pbmJvdW5kX2NvbmZpZxIeCgpoaWphY2tfZG5zGAIgASgIUgpoaWphY2tfZG5zEiwKEWhpamFja19kbnNfZmFrZWlwGAMgASgIUhFoaWphY2tfZG5zX2Zha2VpcBJDCghpbmJvdW5kcxgBIAMoCzItLnl1aGFpaW4uaW5ib3VuZC5pbmJvdW5kX2NvbmZpZy5JbmJvdW5kc0VudHJ5QgIoARIlCgVzbmlmZhgEIAEoCzIWLnl1aGFpaW4uaW5ib3VuZC5zbmlmZhpJCg1JbmJvdW5kc0VudHJ5EgsKA2tleRgBIAEoCRInCgV2YWx1ZRgCIAEoCzIYLnl1aGFpaW4uaW5ib3VuZC5pbmJvdW5kOgI4AUoECAUQBlIHc2VydmVycyK3BgoHaW5ib3VuZBIMCgRuYW1lGA0gASgJEg8KB2VuYWJsZWQYDiABKAgSKwoFZW1wdHkYFSABKAsyFi55dWhhaWluLmluYm91bmQuZW1wdHlCAigBSAASLQoGdGNwdWRwGA8gASgLMhcueXVoYWlpbi5pbmJvdW5kLnRjcHVkcEICKAFIABIpCgRxdWljGBAgASgLMhUueXVoYWlpbi5pbmJvdW5kLnF1aWNCAigBSAASMQoJdHJhbnNwb3J0GAIgAygLMhoueXVoYWlpbi5pbmJvdW5kLnRyYW5zcG9ydEICKAESKQoEaHR0cBgDIAEoCzIVLnl1aGFpaW4uaW5ib3VuZC5odHRwQgIoAUgBEi0KBnNvY2tzNRgEIAEoCzIXLnl1aGFpaW4uaW5ib3VuZC5zb2NrczVCAigBSAESMwoJeXV1Ymluc3lhGAcgASgLMhoueXVoYWlpbi5pbmJvdW5kLnl1dWJpbnN5YUICKAFIARIwCgNtaXgYCCABKAsyFi55dWhhaWluLmluYm91bmQubWl4ZWRCAigBSAFSBW1peGVkEi8KB3NvY2tzNGEYCSABKAsyGC55dWhhaWluLmluYm91bmQuc29ja3M0YUICKAFIARItCgZ0cHJveHkYFCABKAsyFy55dWhhaWluLmluYm91bmQudHByb3h5QgIoAUgBEisKBXJlZGlyGBIgASgLMhYueXVoYWlpbi5pbmJvdW5kLnJlZGlyQgIoAUgBEicKA3R1bhgTIAEoCzIULnl1aGFpaW4uaW5ib3VuZC50dW5CAigBSAESRwoMcmV2ZXJzZV9odHRwGBYgASgLMh0ueXVoYWlpbi5pbmJvdW5kLnJldmVyc2VfaHR0cEICKAFIAVIMcmV2ZXJzZV9odHRwEkQKC3JldmVyc2VfdGNwGBcgASgLMhwueXVoYWlpbi5pbmJvdW5kLnJldmVyc2VfdGNwQgIoAUgBUgtyZXZlcnNlX3RjcBIqCgRub25lGBggASgLMhYueXVoYWlpbi5pbmJvdW5kLmVtcHR5QgIoAUgBQgkKB25ldHdvcmtCCgoIcHJvdG9jb2xKBAgREBJSBElQdjYi/wMKCXRyYW5zcG9ydBItCgZub3JtYWwYDCABKAsyFy55dWhhaWluLmluYm91bmQubm9ybWFsQgIoAUgAEicKA3RscxgBIAEoCzIULnl1aGFpaW4uaW5ib3VuZC50bHNCAigBSAASJwoDbXV4GAIgASgLMhQueXVoYWlpbi5pbmJvdW5kLm11eEICKAFIABIrCgVodHRwMhgFIAEoCzIWLnl1aGFpaW4uaW5ib3VuZC5odHRwMkICKAFIABIzCgl3ZWJzb2NrZXQYBiABKAsyGi55dWhhaWluLmluYm91bmQud2Vic29ja2V0QgIoAUgAEikKBGdycGMYCyABKAsyFS55dWhhaWluLmluYm91bmQuZ3JwY0ICKAFIABIvCgdyZWFsaXR5GAogASgLMhgueXVoYWlpbi5pbmJvdW5kLnJlYWxpdHlCAigBSAASOwoIdGxzX2F1dG8YDSABKAsyGS55dWhhaWluLmluYm91bmQudGxzX2F1dG9CAigBSABSCHRsc19hdXRvEj4KCWh0dHBfbW9jaxgOIAEoCzIaLnl1aGFpaW4uaW5ib3VuZC5odHRwX21vY2tCAigBSABSCWh0dHBfbW9jaxIpCgRhZWFkGA8gASgLMhUueXVoYWlpbi5pbmJvdW5kLmFlYWRCAigBSABCCwoJdHJhbnNwb3J0IgcKBWVtcHR5IgUKA211eCJJCgZ0Y3B1ZHASDAoEaG9zdBgBIAEoCRIxCgdjb250cm9sGAIgASgOMiAueXVoYWlpbi5pbmJvdW5kLnRjcF91ZHBfY29udHJvbCJGCgRxdWljEgwKBGhvc3QYASABKAkSMAoDdGxzGAMgASgLMiMueXVoYWlpbi5wcm90b2NvbC50bHNfc2VydmVyX2NvbmZpZyI2CgRodHRwEhAKCHVzZXJuYW1lGAMgASgJEhAKCHBhc3N3b3JkGAQgASgJSgQIARACUgRob3N0IkUKBnNvY2tzNRIQCgh1c2VybmFtZRgDIAEoCRIQCghwYXNzd29yZBgEIAEoCRILCgN1ZHAYBSABKAhKBAgBEAJSBGhvc3QiJwoHc29ja3M0YRIQCgh1c2VybmFtZRgCIAEoCUoECAEQAlIEaG9zdCI3CgVtaXhlZBIQCgh1c2VybmFtZRgDIAEoCRIQCghwYXNzd29yZBgEIAEoCUoECAEQAlIEaG9zdCIVCgVyZWRpchIMCgRob3N0GAEgASgJImAKBnRwcm94eRIMCgRob3N0GAEgASgJEiQKDWRuc19oaWphY2tpbmcYAiABKAhSDWRuc19oaWphY2tpbmcSIgoMZm9yY2VfZmFrZWlwGAMgASgIUgxmb3JjZV9mYWtlaXAiigEKDHR1bl9wbGF0ZnJvbRI9CgZkYXJ3aW4YASABKAsyLS55dWhhaWluLmluYm91bmQudHVuX3BsYXRmcm9tLnBsYXRmb3JtX2Rhcndpbho7Cg9wbGF0Zm9ybV9kYXJ3aW4SKAoPbmV0d29ya19zZXJ2aWNlGAEgASgJUg9uZXR3b3JrX3NlcnZpY2UixAMKA3R1bhIMCgRuYW1lGAEgASgJEgsKA210dRgCIAEoBRIiCgxmb3JjZV9mYWtlaXAYCSABKAhSDGZvcmNlX2Zha2VpcBImCg5za2lwX211bHRpY2FzdBgGIAEoCFIOc2tpcF9tdWx0aWNhc3QSNAoGZHJpdmVyGAcgASgOMiQueXVoYWlpbi5pbmJvdW5kLnR1bi5lbmRwb2ludF9kcml2ZXISDgoGcG9ydGFsGAggASgJEhwKCXBvcnRhbF92NhgLIAEoCVIJcG9ydGFsX3Y2EiUKBXJvdXRlGAogASgLMhYueXVoYWlpbi5pbmJvdW5kLnJvdXRlEhgKB3Bvc3RfdXAYDCADKAlSB3Bvc3RfdXASHAoJcG9zdF9kb3duGA0gAygJUglwb3N0X2Rvd24SLwoIcGxhdGZvcm0YDiABKAsyHS55dWhhaWluLmluYm91bmQudHVuX3BsYXRmcm9tIj4KD2VuZHBvaW50X2RyaXZlchILCgdmZGJhc2VkEAASCwoHY2hhbm5lbBABEhEKDXN5c3RlbV9ndmlzb3IQAkoECAMQBEoECAQQBVIHZ2F0ZXdheVINZG5zX2hpamFja2luZyIpCgVyb3V0ZRIOCgZyb3V0ZXMYASADKAkSEAoIZXhjbHVkZXMYAiADKAki+QEKCXl1dWJpbnN5YRIQCghwYXNzd29yZBgCIAEoCRIiCgx1ZHBfY29hbGVzY2UYDiABKAhSDHVkcF9jb2FsZXNjZUoECAEQAkoECAMQBEoECAQQBUoECAUQBkoECAYQB0oECAcQCEoECAgQCUoECAkQCkoECAoQC0oECAsQDEoECAwQDUoECA0QDlIEaG9zdFIVZm9yY2VfZGlzYWJsZV9lbmNyeXB0UgZub3JtYWxSA3Rsc1IEcXVpY1IJd2Vic29ja2V0UgRncnBjUgVodHRwMlIHcmVhbGl0eVIDbXV4Ugt0Y3BfZW5jcnlwdFILdWRwX2VuY3J5cHQiCAoGbm9ybWFsIhYKCXdlYnNvY2tldEoECAEQAlIDdGxzIjcKA3RscxIwCgN0bHMYASABKAsyIy55dWhhaWluLnByb3RvY29sLnRsc19zZXJ2ZXJfY29uZmlnIhEKBGdycGNKBAgBEAJSA3RscyISCgVodHRwMkoECAEQAlIDdGxzIsoBCgdyZWFsaXR5EhoKCHNob3J0X2lkGAEgAygJUghzaG9ydF9pZBIgCgtzZXJ2ZXJfbmFtZRgCIAMoCVILc2VydmVyX25hbWUSDAoEZGVzdBgDIAEoCRIgCgtwcml2YXRlX2tleRgEIAEoCVILcHJpdmF0ZV9rZXkSHgoKcHVibGljX2tleRgGIAEoCVIKcHVibGljX2tleRIiCgxtbGRzYTY1X3NlZWQYByABKAlSDG1sZHNhNjVfc2VlZBINCgVkZWJ1ZxgFIAEoCCKdAQoIdGxzX2F1dG8SEwoLc2VydmVybmFtZXMYASADKAkSIAoLbmV4dF9wcm90b3MYAiADKAlSC25leHRfcHJvdG9zEhgKB2NhX2NlcnQYAyABKAxSB2NhX2NlcnQSFgoGY2Ffa2V5GAQgASgMUgZjYV9rZXkSKAoDZWNoGAUgASgLMhsueXVoYWlpbi5pbmJvdW5kLmVjaF9jb25maWciYAoKZWNoX2NvbmZpZxIOCgZlbmFibGUYASABKAgSDgoGY29uZmlnGAIgASgMEiAKC3ByaXZhdGVfa2V5GAMgASgMUgtwcml2YXRlX2tleRIQCghPdXRlclNOSRgEIAEoCSIYCgVzbmlmZhIPCgdlbmFibGVkGAEgASgIIkYKDHJldmVyc2VfaHR0cBILCgN1cmwYASABKAkSKQoDdGxzGAIgASgLMhwueXVoYWlpbi5wcm90b2NvbC50bHNfY29uZmlnIhsKC3JldmVyc2VfdGNwEgwKBGhvc3QYASABKAkiGQoJaHR0cF9tb2NrEgwKBGRhdGEYASABKAwiYgoEYWVhZBIQCghwYXNzd29yZBgBIAEoCRJICg1jcnlwdG9fbWV0aG9kGAIgASgOMiIueXVoYWlpbi5wcm90b2NvbC5BZWFkQ3J5cHRvTWV0aG9kUg1jcnlwdG9fbWV0aG9kKkwKD3RjcF91ZHBfY29udHJvbBIXChN0Y3BfdWRwX2NvbnRyb2xfYWxsEAASDwoLZGlzYWJsZV90Y3AQARIPCgtkaXNhYmxlX3VkcBACQjhaLmdpdGh1Yi5jb20vQXN1dG9ydWZhL3l1aGFpaW4vcGtnL3Byb3Rvcy9jb25maWeSAwXSPgIQA2IIZWRpdGlvbnNw6Ac", [file_google_protobuf_go_features, file_node_protocol]);

/**
 * @generated from message yuhaiin.inbound.inbound_config
 */
export type inbound_config = Message<"yuhaiin.inbound.inbound_config"> & {
  /**
   * @generated from field: bool hijack_dns = 2 [json_name = "hijack_dns"];
   */
  hijackDns: boolean;

  /**
   * @generated from field: bool hijack_dns_fakeip = 3 [json_name = "hijack_dns_fakeip"];
   */
  hijackDnsFakeip: boolean;

  /**
   * @generated from field: map<string, yuhaiin.inbound.inbound> inbounds = 1;
   */
  inbounds: { [key: string]: inbound };

  /**
   * @generated from field: yuhaiin.inbound.sniff sniff = 4;
   */
  sniff?: sniff;
};

/**
 * Describes the message yuhaiin.inbound.inbound_config.
 * Use `create(inbound_configSchema)` to create a new message.
 */
export const inbound_configSchema: GenMessage<inbound_config> = /*@__PURE__*/
  messageDesc(file_config_inbound, 0);

/**
 * @generated from message yuhaiin.inbound.inbound
 */
export type inbound = Message<"yuhaiin.inbound.inbound"> & {
  /**
   * @generated from field: string name = 13;
   */
  name: string;

  /**
   * @generated from field: bool enabled = 14;
   */
  enabled: boolean;

  /**
   * @generated from oneof yuhaiin.inbound.inbound.network
   */
  network: {
    /**
     * @generated from field: yuhaiin.inbound.empty empty = 21;
     */
    value: empty;
    case: "empty";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.tcpudp tcpudp = 15;
     */
    value: tcpudp;
    case: "tcpudp";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.quic quic = 16;
     */
    value: quic;
    case: "quic";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated yuhaiin.inbound.transport transport = 2;
   */
  transport: transport[];

  /**
   * @generated from oneof yuhaiin.inbound.inbound.protocol
   */
  protocol: {
    /**
     * @generated from field: yuhaiin.inbound.http http = 3;
     */
    value: http;
    case: "http";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.socks5 socks5 = 4;
     */
    value: socks5;
    case: "socks5";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.yuubinsya yuubinsya = 7;
     */
    value: yuubinsya;
    case: "yuubinsya";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.mixed mix = 8 [json_name = "mixed"];
     */
    value: mixed;
    case: "mix";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.socks4a socks4a = 9;
     */
    value: socks4a;
    case: "socks4a";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.tproxy tproxy = 20;
     */
    value: tproxy;
    case: "tproxy";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.redir redir = 18;
     */
    value: redir;
    case: "redir";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.tun tun = 19;
     */
    value: tun;
    case: "tun";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.reverse_http reverse_http = 22 [json_name = "reverse_http"];
     */
    value: reverse_http;
    case: "reverseHttp";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.reverse_tcp reverse_tcp = 23 [json_name = "reverse_tcp"];
     */
    value: reverse_tcp;
    case: "reverseTcp";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.empty none = 24;
     */
    value: empty;
    case: "none";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message yuhaiin.inbound.inbound.
 * Use `create(inboundSchema)` to create a new message.
 */
export const inboundSchema: GenMessage<inbound> = /*@__PURE__*/
  messageDesc(file_config_inbound, 1);

/**
 * @generated from message yuhaiin.inbound.transport
 */
export type transport = Message<"yuhaiin.inbound.transport"> & {
  /**
   * @generated from oneof yuhaiin.inbound.transport.transport
   */
  transport: {
    /**
     * @generated from field: yuhaiin.inbound.normal normal = 12;
     */
    value: normal;
    case: "normal";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.tls tls = 1;
     */
    value: tls;
    case: "tls";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.mux mux = 2;
     */
    value: mux;
    case: "mux";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.http2 http2 = 5;
     */
    value: http2;
    case: "http2";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.websocket websocket = 6;
     */
    value: websocket;
    case: "websocket";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.grpc grpc = 11;
     */
    value: grpc;
    case: "grpc";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.reality reality = 10;
     */
    value: reality;
    case: "reality";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.tls_auto tls_auto = 13 [json_name = "tls_auto"];
     */
    value: tls_auto;
    case: "tlsAuto";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.http_mock http_mock = 14 [json_name = "http_mock"];
     */
    value: http_mock;
    case: "httpMock";
  } | {
    /**
     * @generated from field: yuhaiin.inbound.aead aead = 15;
     */
    value: aead;
    case: "aead";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message yuhaiin.inbound.transport.
 * Use `create(transportSchema)` to create a new message.
 */
export const transportSchema: GenMessage<transport> = /*@__PURE__*/
  messageDesc(file_config_inbound, 2);

/**
 * @generated from message yuhaiin.inbound.empty
 */
export type empty = Message<"yuhaiin.inbound.empty"> & {
};

/**
 * Describes the message yuhaiin.inbound.empty.
 * Use `create(emptySchema)` to create a new message.
 */
export const emptySchema: GenMessage<empty> = /*@__PURE__*/
  messageDesc(file_config_inbound, 3);

/**
 * @generated from message yuhaiin.inbound.mux
 */
export type mux = Message<"yuhaiin.inbound.mux"> & {
};

/**
 * Describes the message yuhaiin.inbound.mux.
 * Use `create(muxSchema)` to create a new message.
 */
export const muxSchema: GenMessage<mux> = /*@__PURE__*/
  messageDesc(file_config_inbound, 4);

/**
 * @generated from message yuhaiin.inbound.tcpudp
 */
export type tcpudp = Message<"yuhaiin.inbound.tcpudp"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: yuhaiin.inbound.tcp_udp_control control = 2;
   */
  control: tcp_udp_control;
};

/**
 * Describes the message yuhaiin.inbound.tcpudp.
 * Use `create(tcpudpSchema)` to create a new message.
 */
export const tcpudpSchema: GenMessage<tcpudp> = /*@__PURE__*/
  messageDesc(file_config_inbound, 5);

/**
 * @generated from message yuhaiin.inbound.quic
 */
export type quic = Message<"yuhaiin.inbound.quic"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: yuhaiin.protocol.tls_server_config tls = 3;
   */
  tls?: tls_server_config;
};

/**
 * Describes the message yuhaiin.inbound.quic.
 * Use `create(quicSchema)` to create a new message.
 */
export const quicSchema: GenMessage<quic> = /*@__PURE__*/
  messageDesc(file_config_inbound, 6);

/**
 * @generated from message yuhaiin.inbound.http
 */
export type http = Message<"yuhaiin.inbound.http"> & {
  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: string password = 4;
   */
  password: string;
};

/**
 * Describes the message yuhaiin.inbound.http.
 * Use `create(httpSchema)` to create a new message.
 */
export const httpSchema: GenMessage<http> = /*@__PURE__*/
  messageDesc(file_config_inbound, 7);

/**
 * @generated from message yuhaiin.inbound.socks5
 */
export type socks5 = Message<"yuhaiin.inbound.socks5"> & {
  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: string password = 4;
   */
  password: string;

  /**
   * @generated from field: bool udp = 5;
   */
  udp: boolean;
};

/**
 * Describes the message yuhaiin.inbound.socks5.
 * Use `create(socks5Schema)` to create a new message.
 */
export const socks5Schema: GenMessage<socks5> = /*@__PURE__*/
  messageDesc(file_config_inbound, 8);

/**
 * @generated from message yuhaiin.inbound.socks4a
 */
export type socks4a = Message<"yuhaiin.inbound.socks4a"> & {
  /**
   * @generated from field: string username = 2;
   */
  username: string;
};

/**
 * Describes the message yuhaiin.inbound.socks4a.
 * Use `create(socks4aSchema)` to create a new message.
 */
export const socks4aSchema: GenMessage<socks4a> = /*@__PURE__*/
  messageDesc(file_config_inbound, 9);

/**
 * @generated from message yuhaiin.inbound.mixed
 */
export type mixed = Message<"yuhaiin.inbound.mixed"> & {
  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: string password = 4;
   */
  password: string;
};

/**
 * Describes the message yuhaiin.inbound.mixed.
 * Use `create(mixedSchema)` to create a new message.
 */
export const mixedSchema: GenMessage<mixed> = /*@__PURE__*/
  messageDesc(file_config_inbound, 10);

/**
 * @generated from message yuhaiin.inbound.redir
 */
export type redir = Message<"yuhaiin.inbound.redir"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;
};

/**
 * Describes the message yuhaiin.inbound.redir.
 * Use `create(redirSchema)` to create a new message.
 */
export const redirSchema: GenMessage<redir> = /*@__PURE__*/
  messageDesc(file_config_inbound, 11);

/**
 * @generated from message yuhaiin.inbound.tproxy
 */
export type tproxy = Message<"yuhaiin.inbound.tproxy"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: bool dns_hijacking = 2 [json_name = "dns_hijacking"];
   */
  dnsHijacking: boolean;

  /**
   * @generated from field: bool force_fakeip = 3 [json_name = "force_fakeip"];
   */
  forceFakeip: boolean;
};

/**
 * Describes the message yuhaiin.inbound.tproxy.
 * Use `create(tproxySchema)` to create a new message.
 */
export const tproxySchema: GenMessage<tproxy> = /*@__PURE__*/
  messageDesc(file_config_inbound, 12);

/**
 * @generated from message yuhaiin.inbound.tun_platfrom
 */
export type tun_platfrom = Message<"yuhaiin.inbound.tun_platfrom"> & {
  /**
   * @generated from field: yuhaiin.inbound.tun_platfrom.platform_darwin darwin = 1;
   */
  darwin?: tun_platfrom_platform_darwin;
};

/**
 * Describes the message yuhaiin.inbound.tun_platfrom.
 * Use `create(tun_platfromSchema)` to create a new message.
 */
export const tun_platfromSchema: GenMessage<tun_platfrom> = /*@__PURE__*/
  messageDesc(file_config_inbound, 13);

/**
 * @generated from message yuhaiin.inbound.tun_platfrom.platform_darwin
 */
export type tun_platfrom_platform_darwin = Message<"yuhaiin.inbound.tun_platfrom.platform_darwin"> & {
  /**
   * @generated from field: string network_service = 1 [json_name = "network_service"];
   */
  networkService: string;
};

/**
 * Describes the message yuhaiin.inbound.tun_platfrom.platform_darwin.
 * Use `create(tun_platfrom_platform_darwinSchema)` to create a new message.
 */
export const tun_platfrom_platform_darwinSchema: GenMessage<tun_platfrom_platform_darwin> = /*@__PURE__*/
  messageDesc(file_config_inbound, 13, 0);

/**
 * @generated from message yuhaiin.inbound.tun
 */
export type tun = Message<"yuhaiin.inbound.tun"> & {
  /**
   * name of the tun device
   * eg: tun://tun0, fd://123
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: int32 mtu = 2;
   */
  mtu: number;

  /**
   * @generated from field: bool force_fakeip = 9 [json_name = "force_fakeip"];
   */
  forceFakeip: boolean;

  /**
   * @generated from field: bool skip_multicast = 6 [json_name = "skip_multicast"];
   */
  skipMulticast: boolean;

  /**
   * @generated from field: yuhaiin.inbound.tun.endpoint_driver driver = 7;
   */
  driver: tun_endpoint_driver;

  /**
   * @generated from field: string portal = 8;
   */
  portal: string;

  /**
   * @generated from field: string portal_v6 = 11 [json_name = "portal_v6"];
   */
  portalV6: string;

  /**
   * @generated from field: yuhaiin.inbound.route route = 10;
   */
  route?: route;

  /**
   * @generated from field: repeated string post_up = 12 [json_name = "post_up"];
   */
  postUp: string[];

  /**
   * @generated from field: repeated string post_down = 13 [json_name = "post_down"];
   */
  postDown: string[];

  /**
   * @generated from field: yuhaiin.inbound.tun_platfrom platform = 14;
   */
  platform?: tun_platfrom;
};

/**
 * Describes the message yuhaiin.inbound.tun.
 * Use `create(tunSchema)` to create a new message.
 */
export const tunSchema: GenMessage<tun> = /*@__PURE__*/
  messageDesc(file_config_inbound, 14);

/**
 * @generated from enum yuhaiin.inbound.tun.endpoint_driver
 */
export enum tun_endpoint_driver {
  /**
   * @generated from enum value: fdbased = 0;
   */
  fdbased = 0,

  /**
   * @generated from enum value: channel = 1;
   */
  channel = 1,

  /**
   * @generated from enum value: system_gvisor = 2;
   */
  system_gvisor = 2,
}

/**
 * Describes the enum yuhaiin.inbound.tun.endpoint_driver.
 */
export const tun_endpoint_driverSchema: GenEnum<tun_endpoint_driver> = /*@__PURE__*/
  enumDesc(file_config_inbound, 14, 0);

/**
 * @generated from message yuhaiin.inbound.route
 */
export type route = Message<"yuhaiin.inbound.route"> & {
  /**
   * @generated from field: repeated string routes = 1;
   */
  routes: string[];

  /**
   * @generated from field: repeated string excludes = 2;
   */
  excludes: string[];
};

/**
 * Describes the message yuhaiin.inbound.route.
 * Use `create(routeSchema)` to create a new message.
 */
export const routeSchema: GenMessage<route> = /*@__PURE__*/
  messageDesc(file_config_inbound, 15);

/**
 * @generated from message yuhaiin.inbound.yuubinsya
 */
export type yuubinsya = Message<"yuhaiin.inbound.yuubinsya"> & {
  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: bool udp_coalesce = 14 [json_name = "udp_coalesce"];
   */
  udpCoalesce: boolean;
};

/**
 * Describes the message yuhaiin.inbound.yuubinsya.
 * Use `create(yuubinsyaSchema)` to create a new message.
 */
export const yuubinsyaSchema: GenMessage<yuubinsya> = /*@__PURE__*/
  messageDesc(file_config_inbound, 16);

/**
 * @generated from message yuhaiin.inbound.normal
 */
export type normal = Message<"yuhaiin.inbound.normal"> & {
};

/**
 * Describes the message yuhaiin.inbound.normal.
 * Use `create(normalSchema)` to create a new message.
 */
export const normalSchema: GenMessage<normal> = /*@__PURE__*/
  messageDesc(file_config_inbound, 17);

/**
 * @generated from message yuhaiin.inbound.websocket
 */
export type websocket = Message<"yuhaiin.inbound.websocket"> & {
};

/**
 * Describes the message yuhaiin.inbound.websocket.
 * Use `create(websocketSchema)` to create a new message.
 */
export const websocketSchema: GenMessage<websocket> = /*@__PURE__*/
  messageDesc(file_config_inbound, 18);

/**
 * @generated from message yuhaiin.inbound.tls
 */
export type tls = Message<"yuhaiin.inbound.tls"> & {
  /**
   * @generated from field: yuhaiin.protocol.tls_server_config tls = 1;
   */
  tls?: tls_server_config;
};

/**
 * Describes the message yuhaiin.inbound.tls.
 * Use `create(tlsSchema)` to create a new message.
 */
export const tlsSchema: GenMessage<tls> = /*@__PURE__*/
  messageDesc(file_config_inbound, 19);

/**
 * @generated from message yuhaiin.inbound.grpc
 */
export type grpc = Message<"yuhaiin.inbound.grpc"> & {
};

/**
 * Describes the message yuhaiin.inbound.grpc.
 * Use `create(grpcSchema)` to create a new message.
 */
export const grpcSchema: GenMessage<grpc> = /*@__PURE__*/
  messageDesc(file_config_inbound, 20);

/**
 * @generated from message yuhaiin.inbound.http2
 */
export type http2 = Message<"yuhaiin.inbound.http2"> & {
};

/**
 * Describes the message yuhaiin.inbound.http2.
 * Use `create(http2Schema)` to create a new message.
 */
export const http2Schema: GenMessage<http2> = /*@__PURE__*/
  messageDesc(file_config_inbound, 21);

/**
 * @generated from message yuhaiin.inbound.reality
 */
export type reality = Message<"yuhaiin.inbound.reality"> & {
  /**
   * @generated from field: repeated string short_id = 1 [json_name = "short_id"];
   */
  shortId: string[];

  /**
   * @generated from field: repeated string server_name = 2 [json_name = "server_name"];
   */
  serverName: string[];

  /**
   * @generated from field: string dest = 3;
   */
  dest: string;

  /**
   * @generated from field: string private_key = 4 [json_name = "private_key"];
   */
  privateKey: string;

  /**
   * @generated from field: string public_key = 6 [json_name = "public_key"];
   */
  publicKey: string;

  /**
   * @generated from field: string mldsa65_seed = 7 [json_name = "mldsa65_seed"];
   */
  mldsa65Seed: string;

  /**
   * @generated from field: bool debug = 5;
   */
  debug: boolean;
};

/**
 * Describes the message yuhaiin.inbound.reality.
 * Use `create(realitySchema)` to create a new message.
 */
export const realitySchema: GenMessage<reality> = /*@__PURE__*/
  messageDesc(file_config_inbound, 22);

/**
 * @generated from message yuhaiin.inbound.tls_auto
 */
export type tls_auto = Message<"yuhaiin.inbound.tls_auto"> & {
  /**
   * @generated from field: repeated string servernames = 1;
   */
  servernames: string[];

  /**
   * @generated from field: repeated string next_protos = 2 [json_name = "next_protos"];
   */
  nextProtos: string[];

  /**
   * ca cert and key will auto generate
   * so they will be empty
   *
   * @generated from field: bytes ca_cert = 3 [json_name = "ca_cert"];
   */
  caCert: Uint8Array;

  /**
   * @generated from field: bytes ca_key = 4 [json_name = "ca_key"];
   */
  caKey: Uint8Array;

  /**
   * @generated from field: yuhaiin.inbound.ech_config ech = 5;
   */
  ech?: ech_config;
};

/**
 * Describes the message yuhaiin.inbound.tls_auto.
 * Use `create(tls_autoSchema)` to create a new message.
 */
export const tls_autoSchema: GenMessage<tls_auto> = /*@__PURE__*/
  messageDesc(file_config_inbound, 23);

/**
 * @generated from message yuhaiin.inbound.ech_config
 */
export type ech_config = Message<"yuhaiin.inbound.ech_config"> & {
  /**
   * @generated from field: bool enable = 1;
   */
  enable: boolean;

  /**
   * @generated from field: bytes config = 2;
   */
  config: Uint8Array;

  /**
   * @generated from field: bytes private_key = 3 [json_name = "private_key"];
   */
  privateKey: Uint8Array;

  /**
   * @generated from field: string OuterSNI = 4;
   */
  OuterSNI: string;
};

/**
 * Describes the message yuhaiin.inbound.ech_config.
 * Use `create(ech_configSchema)` to create a new message.
 */
export const ech_configSchema: GenMessage<ech_config> = /*@__PURE__*/
  messageDesc(file_config_inbound, 24);

/**
 * @generated from message yuhaiin.inbound.sniff
 */
export type sniff = Message<"yuhaiin.inbound.sniff"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message yuhaiin.inbound.sniff.
 * Use `create(sniffSchema)` to create a new message.
 */
export const sniffSchema: GenMessage<sniff> = /*@__PURE__*/
  messageDesc(file_config_inbound, 25);

/**
 * @generated from message yuhaiin.inbound.reverse_http
 */
export type reverse_http = Message<"yuhaiin.inbound.reverse_http"> & {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: yuhaiin.protocol.tls_config tls = 2;
   */
  tls?: tls_config;
};

/**
 * Describes the message yuhaiin.inbound.reverse_http.
 * Use `create(reverse_httpSchema)` to create a new message.
 */
export const reverse_httpSchema: GenMessage<reverse_http> = /*@__PURE__*/
  messageDesc(file_config_inbound, 26);

/**
 * @generated from message yuhaiin.inbound.reverse_tcp
 */
export type reverse_tcp = Message<"yuhaiin.inbound.reverse_tcp"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;
};

/**
 * Describes the message yuhaiin.inbound.reverse_tcp.
 * Use `create(reverse_tcpSchema)` to create a new message.
 */
export const reverse_tcpSchema: GenMessage<reverse_tcp> = /*@__PURE__*/
  messageDesc(file_config_inbound, 27);

/**
 * @generated from message yuhaiin.inbound.http_mock
 */
export type http_mock = Message<"yuhaiin.inbound.http_mock"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message yuhaiin.inbound.http_mock.
 * Use `create(http_mockSchema)` to create a new message.
 */
export const http_mockSchema: GenMessage<http_mock> = /*@__PURE__*/
  messageDesc(file_config_inbound, 28);

/**
 * @generated from message yuhaiin.inbound.aead
 */
export type aead = Message<"yuhaiin.inbound.aead"> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;

  /**
   * @generated from field: yuhaiin.protocol.AeadCryptoMethod crypto_method = 2 [json_name = "crypto_method"];
   */
  cryptoMethod: AeadCryptoMethod;
};

/**
 * Describes the message yuhaiin.inbound.aead.
 * Use `create(aeadSchema)` to create a new message.
 */
export const aeadSchema: GenMessage<aead> = /*@__PURE__*/
  messageDesc(file_config_inbound, 29);

/**
 * @generated from enum yuhaiin.inbound.tcp_udp_control
 */
export enum tcp_udp_control {
  /**
   * @generated from enum value: tcp_udp_control_all = 0;
   */
  tcp_udp_control_all = 0,

  /**
   * @generated from enum value: disable_tcp = 1;
   */
  disable_tcp = 1,

  /**
   * @generated from enum value: disable_udp = 2;
   */
  disable_udp = 2,
}

/**
 * Describes the enum yuhaiin.inbound.tcp_udp_control.
 */
export const tcp_udp_controlSchema: GenEnum<tcp_udp_control> = /*@__PURE__*/
  enumDesc(file_config_inbound, 0);

