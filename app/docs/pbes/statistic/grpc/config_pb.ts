// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,js_import_style=legacy_commonjs"
// @generated from file statistic/grpc/config.proto (package yuhaiin.protos.statistic.service, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { connection } from "../config_pb.js";

/**
 * @generated from message yuhaiin.protos.statistic.service.total_flow
 */
export class total_flow extends Message<total_flow> {
  /**
   * @generated from field: uint64 download = 1;
   */
  download = protoInt64.zero;

  /**
   * @generated from field: uint64 upload = 2;
   */
  upload = protoInt64.zero;

  constructor(data?: PartialMessage<total_flow>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.statistic.service.total_flow";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "download", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "upload", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): total_flow {
    return new total_flow().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): total_flow {
    return new total_flow().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): total_flow {
    return new total_flow().fromJsonString(jsonString, options);
  }

  static equals(a: total_flow | PlainMessage<total_flow> | undefined, b: total_flow | PlainMessage<total_flow> | undefined): boolean {
    return proto3.util.equals(total_flow, a, b);
  }
}

/**
 * @generated from message yuhaiin.protos.statistic.service.notify_data
 */
export class notify_data extends Message<notify_data> {
  /**
   * @generated from oneof yuhaiin.protos.statistic.service.notify_data.data
   */
  data: {
    /**
     * @generated from field: yuhaiin.protos.statistic.service.total_flow total_flow = 3;
     */
    value: total_flow;
    case: "totalFlow";
  } | {
    /**
     * @generated from field: yuhaiin.protos.statistic.service.notify_new_connections notify_new_connections = 1;
     */
    value: notify_new_connections;
    case: "notifyNewConnections";
  } | {
    /**
     * @generated from field: yuhaiin.protos.statistic.service.notify_remove_connections notify_remove_connections = 2;
     */
    value: notify_remove_connections;
    case: "notifyRemoveConnections";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<notify_data>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.statistic.service.notify_data";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "total_flow", kind: "message", T: total_flow, oneof: "data" },
    { no: 1, name: "notify_new_connections", kind: "message", T: notify_new_connections, oneof: "data" },
    { no: 2, name: "notify_remove_connections", kind: "message", T: notify_remove_connections, oneof: "data" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): notify_data {
    return new notify_data().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): notify_data {
    return new notify_data().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): notify_data {
    return new notify_data().fromJsonString(jsonString, options);
  }

  static equals(a: notify_data | PlainMessage<notify_data> | undefined, b: notify_data | PlainMessage<notify_data> | undefined): boolean {
    return proto3.util.equals(notify_data, a, b);
  }
}

/**
 * @generated from message yuhaiin.protos.statistic.service.notify_new_connections
 */
export class notify_new_connections extends Message<notify_new_connections> {
  /**
   * @generated from field: repeated yuhaiin.statistic.connection connections = 1;
   */
  connections: connection[] = [];

  constructor(data?: PartialMessage<notify_new_connections>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.statistic.service.notify_new_connections";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connections", kind: "message", T: connection, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): notify_new_connections {
    return new notify_new_connections().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): notify_new_connections {
    return new notify_new_connections().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): notify_new_connections {
    return new notify_new_connections().fromJsonString(jsonString, options);
  }

  static equals(a: notify_new_connections | PlainMessage<notify_new_connections> | undefined, b: notify_new_connections | PlainMessage<notify_new_connections> | undefined): boolean {
    return proto3.util.equals(notify_new_connections, a, b);
  }
}

/**
 * @generated from message yuhaiin.protos.statistic.service.notify_remove_connections
 */
export class notify_remove_connections extends Message<notify_remove_connections> {
  /**
   * @generated from field: repeated uint64 ids = 1;
   */
  ids: bigint[] = [];

  constructor(data?: PartialMessage<notify_remove_connections>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "yuhaiin.protos.statistic.service.notify_remove_connections";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ids", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): notify_remove_connections {
    return new notify_remove_connections().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): notify_remove_connections {
    return new notify_remove_connections().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): notify_remove_connections {
    return new notify_remove_connections().fromJsonString(jsonString, options);
  }

  static equals(a: notify_remove_connections | PlainMessage<notify_remove_connections> | undefined, b: notify_remove_connections | PlainMessage<notify_remove_connections> | undefined): boolean {
    return proto3.util.equals(notify_remove_connections, a, b);
  }
}

